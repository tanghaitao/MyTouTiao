自己搭建nodejs服务器

1：使用finalshell连接远端服务器
2：安装nodejs
    yum方式 参考

	curl -sL https://rpm.nodesource.com/setup_10.x | bash -
	yum install -y nodejs

	[root@localhost /]# node -v
	v10.9.0
	[root@localhost /]# npm -v
	6.2.0 //NPM是随同NodeJS一起安装的包管理工具
3:环境变量(自动配好了，所以这一步不需要)
  vi ~/.bashrc
  增加路径：
  export PATH=$PATH:/usr/local/nodejs/bin
  使配置生效：
  source ~/.bashrc
4:安装forever保证nodejs在后台可以运行
  npm install forever -g 
5:在/下创建https_server2目录，拷贝server.js到该目录下
   forever start server.js //开启nodejs http服务
6：第5中只是搭建了一个简单的http证书，实现服务器有发布目录，需要安装下面两个模块
   注意：要https必须淘宝上买证书，证书需要域名和系统类型
   安装模块：
	npm install express 
	npm install serve-index
   安装出错，采用下面的国内镜像：
   npm install -g cnpm --registry=https://registry.npm.taobao.org
   	cnpm install express 
	cnpm install serve-index
7:在根目录下创建webserver，并在webserver下创建发布目录public 和cert
    cert下放淘宝买的https证书
    public是发布目录
注意：nodejs退出命令窗口为 .exit不成功可用ctrl c
    查看所有进程和某个端口的进程：
		netstat -ntpl查看到已经启动
		netstat - ntpl | grep 443
		
		
8： 一：搭建turn stun服务器
    二：解释：
     1在另一台服务器上搭建该服务器，用于收集候远者，再通过socket.io信令服务器交换候远者
     2开始采集本地的流，把本地的轨添加到本地流中，同时conn建立socket.io的连接。加入房间，发送join
     3socket.io连接成功，收到如下：
       joined：自己加入房间成功  
            处理事件：创建pc，本地有候选者产生，就发送给远端，同时监听一旦有远端的流过来，把流显示在屏幕上
                     把2本地流中的所有轨添加到pc的轨中，注：创建pc和加入轨是一起的
       otherjoin:其它人加入房间的状态，会有两种状态
            joined_unbind：其它人又离开房间， 重新创建pc，重新把2本地流中的所有轨添加到pc的轨中，以准备好候远者等待下次新人加入
            joined_conn：其它人加入房间，创建offer，存offer到本地，并发送offer
       full：自己要加入，但房间满了，关闭自己的pc，停止本地流中的轨，状态变成leaved
       leaved：自己要离开房间，收到leaved，则关闭掉sockedio
       by: 收到别人离开房间，状态机改为joined_unbind，停止本地流中的轨
       disconnect：如果socket.io没有连接成功，则关闭自己的pc，停止本地流中的轨，状态变成leaved
       message：表明我已经生成好了offer，对方生成好了answer
                 offer:如果对方收到我的offer，存offer到远端，同时对方创建answer,
                       存answer到本地，并发answer给我
                 answer：自己收到对方的answer，把它设到远端
                 candidate：收到对方的候选者，则pc添加候选者pc.addIceCandidate(candidate);
    三： turn stun服务器的地址
        var pcConfig = {
				  'iceServers': [{
					'urls': 'turn:stun.al.learningrtc.cn:3478',
					'credential': "mypasswd",
					'username': "garrylea"
				  }]
				};
		pc = new RTCPeerConnection(pcConfig);
		
	四： 具体实现步聚如下：
       



